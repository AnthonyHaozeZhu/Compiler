//iamafunction:thisfunctionhasmanysyntaxerrors.[DEBUG LAB4]: 	INT	int
f[DEBUG LAB4]: 	LPAREN	(
[DEBUG LAB4]: 	RPAREN	)
[DEBUG LAB4]: 	LBRACE	{
[DEBUG LAB4]: 	INT	int
a[DEBUG LAB4]: 	SEMICOLON	;
a[DEBUG LAB4]: 	ASSIGN	=
0[DEBUG LAB4]: 	SEMICOLON	;
while[DEBUG LAB4]: 	LPAREN	(
a[DEBUG LAB4]: 	LESS	<
10[DEBUG LAB4]: 	RPAREN	)
[DEBUG LAB4]: 	LBRACE	{
a[DEBUG LAB4]: 	ASSIGN	=
a*2345[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
[DEBUG LAB4]: 	RETURN	return
a[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
[DEBUG LAB4]: 	INT	int
main[DEBUG LAB4]: 	LPAREN	(
[DEBUG LAB4]: 	RPAREN	)
[DEBUG LAB4]: 	LBRACE	{
[DEBUG LAB4]: 	INT	int
_testid[DEBUG LAB4]: 	SEMICOLON	;
_testid[DEBUG LAB4]: 	ASSIGN	=
0[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	IF	if
[DEBUG LAB4]: 	LPAREN	(
_testid[DEBUG LAB4]: 	ASSIGN	=
[DEBUG LAB4]: 	ASSIGN	=
0[DEBUG LAB4]: 	RPAREN	)
[DEBUG LAB4]: 	LBRACE	{
[DEBUG LAB4]: 	INT	int
_testid[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	INT	int
_testid2[DEBUG LAB4]: 	SEMICOLON	;
_testid1[DEBUG LAB4]: 	ASSIGN	=
_testid1[DEBUG LAB4]: 	ADD	+
1[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
/*Commentlines[DEBUG LAB4]: 	SEMICOLON	;
*/[DEBUG LAB4]: 	LBRACE	{
[DEBUG LAB4]: 	INT	int
a[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
[DEBUG LAB4]: 	LBRACE	{
[DEBUG LAB4]: 	INT	int
a[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
[DEBUG LAB4]: 	INT	int
b[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RETURN	return
0[DEBUG LAB4]: 	SEMICOLON	;
[DEBUG LAB4]: 	RBRACE	}
/*Commentlines.*/